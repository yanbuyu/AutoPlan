name: autoUpdate

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译 每两个小时一次
  schedule:
    - cron: 0 0,1,6-23 * * *

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  autoUpdate:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Clone Repository
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo apt update
        sudo apt install -y python3.10 python3-pip curl wget p7zip p7zip-full aria2 git
        sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
        sudo update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
        ##修复root环境无法安装包的问题
        EM=$(sudo ls /usr/lib/python*/EXTERNALLY-MANAGED | sed -n '1p')
        [ -f "$EM" ] && echo "sudo mv -f $EM ${EM}.bak
        sudo pip install protobuf==3.20.0
        #lanzou-api
        sudo pip install requests_toolbelt
        sudo pip install lxml click asn1crypto Beautifulsoup4 requests xmltodict dicttoxml jsonpath colorama filetype chardet aligo protobuf cryptography pyOpenSSL certifi
        git clone https://${{ secrets._GITHUB_PERSONAL_NAME }}:${{ secrets._GITHUB_PERSONAL_TOKEN }}@github.com/${{ secrets._GITHUB_PERSONAL_NAME }}/${{ secrets._GITHUB_PERSONAL_REPO }}.git
        cd ${{ secrets._GITHUB_PERSONAL_REPO }}
        touch ./passWord.txt
        #echo "${{ secrets._GITHUB_ALI_TOKEN }}" >./aliCloudToken.txt
        echo "${{ secrets._GITHUB_LANZOU_COOKIES_START }}" >./lanzouCloudCookies.txt
        echo "${{ secrets._GITHUB_LANZOU_COOKIES_END }}" >>./lanzouCloudCookies.txt
        echo "${{ secrets._GITHUB_123PAN_USENAME }}" >./123PanUseNameAndPassWord.txt
        echo "${{ secrets._GITHUB_123PAN_PASSWORD }}" >>./123PanUseNameAndPassWord.txt

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      continue-on-error: true
      with:
        retain_days: 1
        keep_minimum_runs: 0

    - name: auto UMSR
      run: |
        cd ${{ secrets._GITHUB_PERSONAL_REPO }}
        sudo python ./pyscript/mainpy/appactions.py

    #- name: Upload zip
    #  uses: actions/upload-artifact@main
    #  with:
    #    name: UMSR Patch
    #    path: out/*.zip
